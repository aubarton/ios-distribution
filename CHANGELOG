Splitforce Library

Version 1.0.1 Revisions
=======================
 - Compliance with LLVM Module format to enable toll-free briding in Swift

Version 1.0.0 Revisions
=======================
 - All 0.9.0 revisions
 - Shiny new website to set up Segmentation and visualise results
 - Automatic migration of persisted data when updating from earlier library versions
 - Slimmed down library to ensure minimal overhead on your apps

Version 0.9.0 Revisions
=======================
 - Preparation for 1.0 Release
 - Segmentation & Targeting
    - new method: +setCustomTargetingKey:withBlock:
    - deprecated: +setCVTGlobalObjectValues
 - Deprecated Methods Removed
 - Changed default of persistDefaultCohort to NO, to match retargeting / revalidating behaviour
 
Version 0.4.8 Revisions
=======================
 - XCode QuickLook Debug Support

Version 0.4.7 Revisions
=======================
 - Performance improvements
 - Fix shake to variation bug that prevented it from working more than once

Version 0.4.6b Revisions
=======================
 - Fix for a conflict between Shake to Variation and non-Storyboard applications.
 - Bug fix that allowed Shake to Variation outside of Debug mode
 - Debug mode data is now split from Release data, see website for more details
 
Version 0.4.5 Revisions
=======================
 - New feature - "Shake to Variation", enabled by Debug mode.  Lets you choose any variation for any experiment just by shaking the device - great for debugging your variation code!  Set the shakeToVariationDidChangeVariationBlock on the SFManager.currentManager object after you have instantiated the manager to rerun any experiments with the new data.  Codeless Buttons get redraws automagically.
 - Introduced Introspection Utilities to allow clients to inspect the valid variation names, and set of experiment names in the manifest
 - Removed CoreData dependency, resolved build issues on iOS7.0 targets, 64-bit support
 
Version 0.4.4 Revisions
=======================
 - If you set an invalid variation name within willUseCohortIdentifier block, then SFManager will use the default cohort for that experiment.
 - +[SFManager frameworkVersion] returns the framework version

Version 0.4.3 Revisions
=======================
 - Library support for configuring experiment coverage  on website. (Coming soon)
 - Improvement in handling default blocks, tracking results now collected even if the device is offline.

Version 0.4.2 Revisions
=======================
 - Library support for Custom Variation Targetting Scripting (CVT), coming soon to Splitforce.com website.
 - CVT Supported values (set on the global object):
    - UIIdiom, valid values "pad" or "phone"
    - frameworkVersion
    - model
    - deviceName
 - Only works on iOS7+
 - Need to link the JavaScriptCore framework to use this (Set to optional to compile for devices < iOS7.0)

Version 0.4.1 Revisions
=======================
 - Localisations now fallback to Major-locale matches prior to most-recently used matches.  i.e. if a user first sets their device to Chinese and then to British-English, then we will match US-english localisations before Chinese localisations when there is no en-GB localisation included.
 - Results on Splitforce.com are split based on the combination of locales picked for each component in a variation. (coming soon)

Version 0.4 Revisions
=====================

 - Cohort Identification
  - Callback to indicate to user code which cohort this user is in.  Can be used to hook in third party & bespoke analytics platforms.
  - Callback to allow user code to modify the cohort - this is useful for testing by enabling the developer to specify which exact
    variations to execute each time.
 - Variation Choice is now done at Initialisation time (previously this was done on demand)
 - Default SFVariations are created if the experiment used the default block.  The reserved variation name __sf_default is used for defaults.
 - Sample Rate is deprecated - use the splitforce.com website to configure experiment coverage.
 - Introduced CHANGELOG file to present changes to the framework.
 - Added support for rolling out a winner (and rollback)

 
